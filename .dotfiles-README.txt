Configuration Dotfiles for Linux & Mac OSX
----

Installation:
----
Fork the Git Repo using the browser gui

Clone the Git repository. NOTE: substitute *your* git username for 'io-tupelo' 

    git clone  --bare  https://github.com/io-tupelo/dotfiles.git    # creates dir `dotfiles.git`

Create a `git` alias that will be used only for the dotfiles repo:

    alias dgit='git --git-dir=${HOME}/dotfiles.git --work-tree=${HOME}' 

Configure the dotfiles repo to ignore new/untracked files by default

    dgit config --local status.showUntrackedFiles no 

Save any existing dotfiles (important!)

    mkdir dotfiles-old
    mv .* dotfiles-old

Install dotfiles from the repo `dotfiles.git`.  

*****  WARNING - will overwrite existing dotfiles! ***** 
*****  WARNING - will overwrite existing dotfiles! ***** 
*****  WARNING - will overwrite existing dotfiles! ***** 

    dgit reset --hard 

Add a new file to the dotfiles repo

    dgits                           # "dgit status"
    dgit add -f .some-new-file-rc   # eg .cshrc, etc
    dgits                           # "dgit status" - shows added
    dgitcamp                        # "dgit commit all 'misc' push" - commit & push
    dgitsy                          # "dgit sync" - combined push & pull
    

To Make Your Own Version of the Dotfiles Repository
----
Fork the Git Repo using the browser gui. Then, if your GitHub username is "fred",
your new repo will have a URL like:

- https://github.com/fred/dotfiles

and a corresponding git SSH remote like:

- git@github.com:fred/dotfiles.git  

Then you can save your edits to your personal dotfiles repo with commands like

- dgit push


